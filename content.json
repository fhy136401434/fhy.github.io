[{"title":"article title","date":"2018-09-10T08:50:22.000Z","path":"2018/09/10/article-title-1/","text":"","tags":[]},{"title":"js深拷贝","date":"2018-09-10T08:50:15.000Z","path":"2018/09/10/article-title/","text":"js深拷贝1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859export const $ = function() &#123; var copyIsArray, toString = Object.prototype.toString, hasOwn = Object.prototype.hasOwnProperty, class2type = &#123; '[object Boolean]': 'boolean', '[object Number]': 'number', '[object String]': 'string', '[object Function]': 'function', '[object Array]': 'array', '[object Date]': 'date', '[object RegExp]': 'regExp', '[object Object]': 'object' &#125;, type = function(obj) &#123; return obj == null ? String(obj) : class2type[toString.call(obj)] || \"object\"; &#125;, isWindow = function(obj) &#123; return obj &amp;&amp; typeof obj === \"object\" &amp;&amp; \"setInterval\" in obj; &#125;, isArray = Array.isArray || function(obj) &#123; return type(obj) === \"array\"; &#125;, isPlainObject = function(obj) &#123; if (!obj || type(obj) !== \"object\" || obj.nodeType || isWindow(obj)) &#123; return false; &#125; if (obj.constructor &amp;&amp; !hasOwn.call(obj, \"constructor\") &amp;&amp; !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) &#123; return false; &#125; var key; for (key in obj) &#123;&#125; return key === undefined || hasOwn.call(obj, key); &#125;, extend = function(deep, target, options) &#123; for (var name in options) &#123; var src = target[name]; var copy = options[name]; if (target === copy) &#123; continue; &#125; if (deep &amp;&amp; copy &amp;&amp; (isPlainObject(copy) || (copyIsArray = isArray(copy)))) &#123; if (copyIsArray) &#123; copyIsArray = false; var clone = src &amp;&amp; isArray(src) ? src : []; &#125; else &#123; var clone = src &amp;&amp; isPlainObject(src) ? src : &#123;&#125;; &#125; target[name] = extend(deep, clone, copy); &#125; else if (copy !== undefined) &#123; target[name] = copy; &#125; &#125; return target; &#125;; return &#123; extend: extend &#125;;&#125;();","tags":[]},{"title":"Hello World","date":"2018-09-10T08:34:30.793Z","path":"2018/09/10/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]