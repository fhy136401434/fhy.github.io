[{"title":"Hello World","date":"2018-09-10T08:34:30.793Z","path":"2018/09/10/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"vue-cli项目中获取微信授权","date":"2018-03-10T06:25:24.000Z","path":"2018/03/10/article-title-1/","text":"1、引入微信js-sdk1npm install weixin-js-sdk --save 2、项目中使用1import wx from 'weixin-js-sdk' 3、具体开始使用具体代码如下： 1、template模板 123456789101112131415161718192021222324252627282930313233343536373839&lt;template&gt; &lt;div class=\"wraper\"&gt; &lt;loadmore :height=\"height\" @loadBottom=\"loadBottom\" @loadTop=\"loadTop\" ref=\"loadmores\"&gt; &lt;div&gt; &lt;div class=\"box\"&gt; &lt;mt-swipe :auto=\"2000\"&gt; &lt;mt-swipe-item v-for=\"(item, index) in items\" :key=\"item.id\"&gt; &lt;img :src=\"item.url\" class=\"img\" @click=\"banner(index)\"/&gt; &lt;/mt-swipe-item&gt; &lt;/mt-swipe&gt; &lt;/div&gt; &lt;!--店铺列表--&gt; &lt;div class=\"listWarper\" v-for=\"(item, index) in list\" :key=\"index\"&gt; &lt;div class=\"listBox clearfix\" @click=\"shopInfo(item.shopNum, item.customerNum)\"&gt; &lt;div class=\"boxLeft\"&gt; &lt;img :src=\"item.customerLogo\"&gt; &lt;/div&gt; &lt;div class=\"boxRight\"&gt; &lt;div class=\"boxRightTop\"&gt; &lt;div class=\"clearfix\"&gt; &lt;div class=\"boxRightTopName\"&gt; &#123;&#123;item.shopName&#125;&#125; &lt;/div&gt; &lt;div class=\"boxRightTopDistant\"&gt; &#123;&#123;item.distance&#125;&#125; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"boxIntroduce\"&gt; &lt;div class=\"boxVarieties\" v-if=\"item.shopAddress\"&gt;&#123;&#123;item.shopAddress&#125;&#125;&lt;/div&gt; &lt;div class=\"boxVarieties\" v-if=\"item.industryName\"&gt;&#123;&#123;item.industryName&#125;&#125;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/loadmore&gt; &lt;/div&gt;&lt;/template&gt; 2、script部分（核心） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160&lt;script&gt; import wx from 'weixin-js-sdk' export default &#123; data() &#123; return &#123; height: 'calc(100vh - 1rem)', name: '111', items: [&#123; title: '图片1', url: require('../../assets/imgs/home_banner.jpg') &#125;, &#123; title: '图片2', url: require('../../assets/imgs/home_banner.jpg') &#125;], lat: '', lng: '', pageNum: 1,//页码 loader: true, list: [],//数据 allLoaded: false, bottomStatus: '', wrapperHeight: 0, topStatus: '', translate: 0, moveTranslate: 0, &#125; &#125;, created() &#123; //授权获取数据 this.getNearInfo(); &#125;, methods: &#123; banner(index) &#123; console.log(`banner$&#123;index&#125;`); &#125;, shopInfo(shopNum, customerNum) &#123; this.$router.push(&#123;path: '/shopList/shopInfo',query: &#123;shopNum,customerNum&#125;&#125;) &#125;, //上拉加载 loadBottom() &#123; this.$refs.loadmores.onBottomLoaded(); if (!this.loader) return; let params = &#123; pageSize: 10, currentPage: this.pageNum, mapLat: this.lat, mapLng: this.lng &#125; this.getNearList(params); &#125;, //下拉刷新 loadTop() &#123; this.loader = true; this.pageNum = 1; this.$refs.loadmores.onTopLoaded(); let params = &#123; currentPage: this.pageNum, pageSize: 10, mapLat: this.lat, mapLng: this.lng &#125; this.getNearList(params) &#125;, getNearInfo() &#123; let _this = this, infoParameter = &#123; requestUrl: encodeURIComponent(window.location.href.split(\"#\")[0]) &#125; //先从后台获取后面需要配置的微信信息 this.$http.getNearInfo(infoParameter).then(res =&gt; &#123; if(res.result == 'success') &#123; let data = res.data, appId = data.appId, nonceStr = data.nonceStr, timestamp = data.timestamp, signature = data.signature; //根据后台返回的配置信息进行配置 wx.config(&#123; debug: false, //必填，true为调试模式，已alert形式弹出 appId: appId, // 必填，公众号的唯一标识 timestamp: timestamp, // 必填，生成签名的时间戳 nonceStr: nonceStr, // 必填，生成签名的随机串 signature: signature, // 必填，签名 jsApiList: ['showOptionMenu', 'onMenuShareTimeline', 'onMenuShareAppMessage', 'getLocation'] // 必填，需要使用的JS接口列表 &#125;); //开始获取用户的位置信息 wx.ready(() =&gt; &#123; wx.getLocation(&#123; type: 'gcj02', //默认为wgs84的gps坐标，如果要返回直接给openLocation用的火星坐标，可传入'gcj02' success: function (res) &#123; //用户点击同意授权的回调函数 _this.lat = res.latitude; // 纬度 _this.lng = res.longitude; // 经度 //list请求 let params = &#123; currentPage: _this.pageNum, pageSize: 10, mapLat: _this.lat, mapLng: _this.lng &#125; //获取列表信息 _this.getNearList(params) &#125;, cancel: function()&#123; //用户点击拒绝授权的回调函数，设置默认位置（天安门） _this.lat = 39.9219; _this.lng = 116.44355; let params = &#123; currentPage: _this.pageNum, pageSize: 10, mapLat: _this.lat, mapLng: _this.lng &#125; //获取列表信息 _this.getNearList(params) &#125;, error: function(err)&#123; console.log('err', err); &#125; &#125;); &#125;) &#125; &#125;).catch(err =&gt; &#123; console.log(err); &#125;) &#125;, getNearList(params) &#123; let pageNum = this.pageNum; if (!this.loader) return; this.$http.getNearList(params).then(res =&gt; &#123; if (res.result == 'success') &#123; let data = res.data, lister = data.list, list = this.list, l = lister.length; if (pageNum &gt; 1) &#123; list = [...list, ...lister]; &#125; else &#123; list = lister; &#125; this.list = list; if (l &lt; 10) &#123; this.loader = false; &#125; else &#123; this.pageNum = (pageNum + 1); this.loader = true; &#125; &#125; &#125;).catch(err =&gt; &#123; &#125;) &#125; &#125; &#125;&lt;/script&gt; 3、css部分 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;style lang=\"scss\" scoped&gt; .wraper &#123; height: calc(100vh - 1rem); overflow-y: auto; overflow-x: hidden; .box &#123; overflow: hidden; width: 100%; height: 3rem; img &#123; width: 100%; height: 3rem; &#125; &#125; .listBox &#123; width: 93%; margin: 0 auto; background: #fff; position: relative; border-bottom: solid #e6e6e6 1px; padding: .26rem 0; .boxLeft &#123; width: 20%; height: 1.26rem; float: left; img &#123; width: 1.26rem; height: 1.26rem; border: solid #e8e8e8 1px; &#125; &#125; .boxRight &#123; width: 80%; float: left; font-size: .3rem; .boxRightTop &#123; width: 100%; height: 1.28rem; .boxRightTopName &#123; float: left; line-height: .3rem; padding: .1rem 0; font-weight: bold; font-size: .3rem; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; &#125; .boxRightTopDistant &#123; float: right; height: .3rem; line-height: .3rem; font-size: .26rem; font-weight: bolder; color: #aeaeae; &#125; .boxIntroduce &#123; width: 100%; height: .78rem; .boxVarieties &#123; display: inline-block; max-width: 1.2rem; line-height: .78rem; font-size: .24rem; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; color: #aeaeae; padding-right: .2rem; &#125; &#125; &#125; &#125; &#125; &#125;&lt;/style&gt;","tags":[]},{"title":"js深拷贝","date":"2017-01-05T10:20:15.000Z","path":"2017/01/05/article-title/","text":"js深拷贝1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859export const $ = function() &#123; var copyIsArray, toString = Object.prototype.toString, hasOwn = Object.prototype.hasOwnProperty, class2type = &#123; '[object Boolean]': 'boolean', '[object Number]': 'number', '[object String]': 'string', '[object Function]': 'function', '[object Array]': 'array', '[object Date]': 'date', '[object RegExp]': 'regExp', '[object Object]': 'object' &#125;, type = function(obj) &#123; return obj == null ? String(obj) : class2type[toString.call(obj)] || \"object\"; &#125;, isWindow = function(obj) &#123; return obj &amp;&amp; typeof obj === \"object\" &amp;&amp; \"setInterval\" in obj; &#125;, isArray = Array.isArray || function(obj) &#123; return type(obj) === \"array\"; &#125;, isPlainObject = function(obj) &#123; if (!obj || type(obj) !== \"object\" || obj.nodeType || isWindow(obj)) &#123; return false; &#125; if (obj.constructor &amp;&amp; !hasOwn.call(obj, \"constructor\") &amp;&amp; !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) &#123; return false; &#125; var key; for (key in obj) &#123;&#125; return key === undefined || hasOwn.call(obj, key); &#125;, extend = function(deep, target, options) &#123; for (var name in options) &#123; var src = target[name]; var copy = options[name]; if (target === copy) &#123; continue; &#125; if (deep &amp;&amp; copy &amp;&amp; (isPlainObject(copy) || (copyIsArray = isArray(copy)))) &#123; if (copyIsArray) &#123; copyIsArray = false; var clone = src &amp;&amp; isArray(src) ? src : []; &#125; else &#123; var clone = src &amp;&amp; isPlainObject(src) ? src : &#123;&#125;; &#125; target[name] = extend(deep, clone, copy); &#125; else if (copy !== undefined) &#123; target[name] = copy; &#125; &#125; return target; &#125;; return &#123; extend: extend &#125;;&#125;();","tags":[]},{"title":"左边固定宽度，右边自适应的几种实现方案","date":"2016-11-10T06:20:55.000Z","path":"2016/11/10/adapt-title/","text":"左边固定宽度，右边自适应的几种实现方案html结构都如下 1234&lt;div class=\"wrapper\"&gt; &lt;div class=\"left\"&gt;22&lt;/div&gt; &lt;div class=\"right\"&gt;11&lt;/div&gt;&lt;/div&gt; css为了方便去除了margin和padding 1234* &#123; margin: 0; padding: 0;&#125; 1、双inline-block实现方案12345678910111213141516171819.wrapper &#123; width: 100vw; height: 100vh; font-size: 0; /*去除空格影响*/ box-sizing: border-box;&#125;.wrapper div &#123; display: inline-block; box-sizing: border-box; height: 100vh;&#125;.left &#123; width: 120px; background: red;&#125;.right &#123; width: calc(100% - 120px); background: blue;&#125; 2、双float实现方案12345678910111213141516.wrapper &#123; width: 100vw; height: 100vh;&#125;.wrapper div &#123; float: left; height: 100%;&#125;.left &#123; width: 120px; background: red;&#125;.right &#123; width: calc(100% - 120px); background: blue;&#125; 3、float + margin-left实现方案123456789101112131415.wrapper &#123; width: 100vw; height: 100vh;&#125;.left &#123; width: 120px; height: 100vh; background: red; float: left;&#125;.right &#123; margin-left: 120px; background: blue; height: 100vh;&#125; 4、absolute + margin-left实现方案123456789101112131415.wrapper &#123; width: 100vw; height: 100vh;&#125;.left &#123; position: absolute; width: 120px; height: 100vh; background: red;&#125;.right &#123; margin-left: 120px; height: 100vh; background: blue;&#125; 5、float + BFC实现方案123456789101112131415.wrapper &#123; width: 100vw; height: 100vh;&#125;.left &#123; float: left; width: 120px; height: 100vh; background: red;&#125;.right &#123; height: 100vh; overflow: auto; background: blue;&#125; 6、flex实现方案123456789101112131415161718.wrapper &#123; width: 100vw; height: 100vh; display: flex; /* flex容器的一个默认属性值:align-items: stretch;。这个属性导致了为了让两个盒子高度自动，需要设置: align-items: flex-start; */ align-items: flex-start;&#125;.left &#123; width: 120px; height: 100vh; flex: 0 0 auto; background: red;&#125;.right &#123; height: 100vh; flex: 1 1 auto; background: blue;&#125; 总结以上六种该方案实现，其中1、2方案都是利用calc计算属性来实现右侧自适应，1方案中因为都是inline-block，需要设置font-size： 0;来去除空格影响,不设置会出现两个之间会有间隔，导致右边盒子掉到下一行，第3种方案，左边盒子左浮动，右边盒子不浮动，如果不设置margin-left会导致右边盒子覆盖在左边盒子上面，第4种实现方案与第3种实现方案相同。利用左边盒子脱离文档流设置margin-left。第五种左边浮动，右边如果不设置overflow：auto;不会触发元素的BFC，如果不触发元素的BFC会导致，右边的盒子叠在左边盒子上面，触发元素的BFC后，作用就是让右边的盒子不与左边的盒子重叠。第六种实现用的flex，左边的盒子固定宽，设置flex：0 0 auto或者flex: none;不会根据布局伸缩，右边盒子设置flex: 1 1 auto;为弹性盒子，充满剩余部分，还有就是父级盒子设置align-items: flex-start;是因为flex容器的一个默认属性值:align-items: stretch;。这个属性导致了为了让两个盒子高度自动，需要设置: align-items: flex-start;","tags":[]}]